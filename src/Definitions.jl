# Design principles
# Respect the attention and focus of the user
#	Spinners are designed to grab attention,so use them judiciously.
# Animation should begin immediately
# 	If there is a long pause at the start,the user might think there is an issue.
#	:snail might need to be removed for this reason...
# Take care not to choose an already existing symbol for a new spinner

# Add dictionaries in the merge process when adding a new set of spinners
const SPINNERS = Dict(

# Spinners created in this package by contributors
	:bar => ["▁","▂","▃","▄","▅","▆","▇","█","▇","▆","▅","▄","▃","▂","▁"],
	:cards => [
			"🂠🂠🂠🂠🂠",
			"🂪🂠🂠🂠🂠",
			"🂪🂫🂠🂠🂠",
			"🂪🂫🂭🂠🂠",
			"🂪🂫🂭🂮🂠",
			"🂪🂫🂭🂮🂱",
			"🂪🂫🂭🂮🂱",
			"🂪🂫🂭🂮🂱",
			"🂪🂫🂭🂮🂱",
			"🂠🂫🂭🂮🂱",
			"🂠🂠🂭🂮🂱",
			"🂠🂠🂠🂮🂱",
			"🂠🂠🂠🂠🂱",
			"🂠🂠🂠🂠🂠",
			"🂠🂠🂠🂠🂠",
			"🂠🂠🂠🂠🂠",
			"🂠🂠🂠🂠🂠",
		],
	:clock => string.([Char(i) for i in 0x1f550:0x1f55b]),
	:dots => string.([Char(i) for i in 0x2800:0x28ff]),
		#  @show map(Unicode.julia_chartransform,x for x in s)
		# or just collect(s)
	:loading => [
			".    ",
			"..   ",
			"...  ",
			".... ",
			".....",
			".....",
			".....",
			".....",
		],
	:pinwheel => ["\\","|","/","-"],
	:shutter => ["▏","▎","▍","▌","▋","▊","▉","▉","▊","▋","▌","▍","▎","▏"],

# Spinners from different sources
# Do not forget to cite the creators and add a reference in the LICENSE file.

# https://github.com/sindresorhus/cli-spinners

	:dots1 => ["⠋","⠙","⠹","⠸","⠼","⠴","⠦","⠧","⠇","⠏"],
	:dots2 => ["⣾","⣽","⣻","⢿","⡿","⣟","⣯","⣷"],
	:dots3 => ["⠋","⠙","⠚","⠞","⠖","⠦","⠴","⠲","⠳","⠓"],
	:dots4 => ["⠄","⠆","⠇","⠋","⠙","⠸","⠰","⠠","⠰","⠸","⠙","⠋","⠇","⠆"],
	:dots11 => ["⠁","⠂","⠄","⡀","⢀","⠠","⠐","⠈"],
	:dots12 =>
		 [
			"⢀⠀",
			"⡀⠀",
			"⠄⠀",
			"⢂⠀",
			"⡂⠀",
			"⠅⠀",
			"⢃⠀",
			"⡃⠀",
			"⠍⠀",
			"⢋⠀",
			"⡋⠀",
			"⠍⠁",
			"⢋⠁",
			"⡋⠁",
			"⠍⠉",
			"⠋⠉",
			"⠋⠉",
			"⠉⠙",
			"⠉⠙",
			"⠉⠩",
			"⠈⢙",
			"⠈⡙",
			"⢈⠩",
			"⡀⢙",
			"⠄⡙",
			"⢂⠩",
			"⡂⢘",
			"⠅⡘",
			"⢃⠨",
			"⡃⢐",
			"⠍⡐",
			"⢋⠠",
			"⡋⢀",
			"⠍⡁",
			"⢋⠁",
			"⡋⠁",
			"⠍⠉",
			"⠋⠉",
			"⠋⠉",
			"⠉⠙",
			"⠉⠙",
			"⠉⠩",
			"⠈⢙",
			"⠈⡙",
			"⠈⠩",
			"⠀⢙",
			"⠀⡙",
			"⠀⠩",
			"⠀⢘",
			"⠀⡘",
			"⠀⠨",
			"⠀⢐",
			"⠀⡐",
			"⠀⠠",
			"⠀⢀",
			"⠀⡀"
		]
	,
	:sand => ["⠁","⠂","⠄","⡀","⡈","⡐","⡠","⣀","⣁","⣂","⣄","⣌","⣔","⣤","⣥","⣦","⣮","⣶","⣷","⣿","⡿","⠿","⢟","⠟","⡛","⠛","⠫","⢋","⠋","⠍","⡉","⠉","⠑","⠡","⢁"],
	:pipe => ["┤","┘","┴","└","├","┌","┬","┐"],
	:star => ["✶","✸","✹","✺","✹","✷"],
	:flip => ["_","_","_","-","`","'","´","-","_","_"],
	:balloon => [" ",".","o","O","@","*"," "],
	:bounce => ["⠁","⠂","⠄","⠂"],
	:boxBounce => ["▖","▘","▝","▗"],
	:boxBounce2 => ["▌","▀","▐","▄"],
	:triangle => ["◢","◣","◤","◥"],
	:arc => ["◜","◠","◝","◞","◡","◟"],
	:squareCorners => ["◰","◳","◲","◱"],
	:circleQuarters => ["◴","◷","◶","◵"],
	:circleHalves => ["◐","◓","◑","◒"],
	:toggle => ["⊶","⊷"],
	:toggle2 => ["▫","▪"],
	:toggle3 => ["□","■"],
	:toggle4 => ["■","□","▪","▫"],
	:toggle5 => ["▮","▯"],
	:toggle6 => ["ဝ","၀"],
	:toggle7 => ["⦾","⦿"],
	:toggle8 => ["◍","◌"],
	:toggle9 => ["◉","◎"],
	:toggle10 => ["㊂","㊀","㊁"],
	:toggle11 => ["⧇","⧆"],
	:toggle12 => ["☗","☖"],
	:toggle13 => ["=","*","-"],
	:arrow => ["←","↖","↑","↗","→","↘","↓","↙"],
	:arrow2 =>
		 [
			"⬆️ ",
			"↗️ ",
			"➡️ ",
			"↘️ ",
			"⬇️ ",
			"↙️ ",
			"⬅️ ",
			"↖️ "
		]
	,
	:arrows =>
		 [
			"▹▹▹▹▹",
			"▸▹▹▹▹",
			"▹▸▹▹▹",
			"▹▹▸▹▹",
			"▹▹▹▸▹",
			"▹▹▹▹▸"
		]
	,
	:bouncingBar =>
		 [
			"[    ]",
			"[=   ]",
			"[==  ]",
			"[=== ]",
			"[ ===]",
			"[  ==]",
			"[   =]",
			"[    ]",
			"[   =]",
			"[  ==]",
			"[ ===]",
			"[====]",
			"[=== ]",
			"[==  ]",
			"[=   ]"
		]
	,
	:bouncingBall =>
		 [
			"( ●    )",
			"(  ●   )",
			"(   ●  )",
			"(    ● )",
			"(     ●)",
			"(    ● )",
			"(   ●  )",
			"(  ●   )",
			"( ●    )",
			"(●     )"
		]
	,
	:smiley =>
		 [
			"😄 ",
			"😝 "
		]
	,
	:monkey =>
		 [
			"🙈 ",
			"🙈 ",
			"🙉 ",
			"🙊 "
		]
	,
	:hearts =>
		 [
			"💛 ",
			"💙 ",
			"💜 ",
			"💚 ",
			"❤️ "
		]
	,
	:earth =>
		 [
			"🌍 ",
			"🌎 ",
			"🌏 "
		]
	,
	:moon =>
		 [
			"🌑 ",
			"🌒 ",
			"🌓 ",
			"🌔 ",
			"🌕 ",
			"🌖 ",
			"🌗 ",
			"🌘 "
		]
	,
	:runner =>
		 [
			"🚶 ",
			"🏃 "
		]
	,
	:pong =>
		 [
			"▐⠂       ▌",
			"▐⠈       ▌",
			"▐ ⠂      ▌",
			"▐ ⠠      ▌",
			"▐  ⡀     ▌",
			"▐  ⠠     ▌",
			"▐   ⠂    ▌",
			"▐   ⠈    ▌",
			"▐    ⠂   ▌",
			"▐    ⠠   ▌",
			"▐     ⡀  ▌",
			"▐     ⠠  ▌",
			"▐      ⠂ ▌",
			"▐      ⠈ ▌",
			"▐       ⠂▌",
			"▐       ⠠▌",
			"▐       ⡀▌",
			"▐      ⠠ ▌",
			"▐      ⠂ ▌",
			"▐     ⠈  ▌",
			"▐     ⠂  ▌",
			"▐    ⠠   ▌",
			"▐    ⡀   ▌",
			"▐   ⠠    ▌",
			"▐   ⠂    ▌",
			"▐  ⠈     ▌",
			"▐  ⠂     ▌",
			"▐ ⠠      ▌",
			"▐ ⡀      ▌",
			"▐⠠       ▌"
		]
	,
	:shark =>
		 [
			"▐|\\____________▌",
			"▐_|\\___________▌",
			"▐__|\\__________▌",
			"▐___|\\_________▌",
			"▐____|\\________▌",
			"▐_____|\\_______▌",
			"▐______|\\______▌",
			"▐_______|\\_____▌",
			"▐________|\\____▌",
			"▐_________|\\___▌",
			"▐__________|\\__▌",
			"▐___________|\\_▌",
			"▐____________|\\▌",
			"▐____________/|▌",
			"▐___________/|_▌",
			"▐__________/|__▌",
			"▐_________/|___▌",
			"▐________/|____▌",
			"▐_______/|_____▌",
			"▐______/|______▌",
			"▐_____/|_______▌",
			"▐____/|________▌",
			"▐___/|_________▌",
			"▐__/|__________▌",
			"▐_/|___________▌",
			"▐/|____________▌"
		]
	,
	:dqpb => ["d","q","p","b"],
	:weather =>
		 [
			"☀️ ",
			"☀️ ",
			"☀️ ",
			"🌤 ",
			"⛅️ ",
			"🌥 ",
			"☁️ ",
			"🌧 ",
			"🌨 ",
			"🌧 ",
			"🌨 ",
			"🌧 ",
			"🌨 ",
			"⛈ ",
			"🌨 ",
			"🌧 ",
			"🌨 ",
			"☁️ ",
			"🌥 ",
			"⛅️ ",
			"🌤 ",
			"☀️ ",
			"☀️ "
		]
	,
	:Christmas =>
		 [
			"🌲",
			"🎄"
		]
	,
	:point =>
		 [
			"∙∙∙",
			"●∙∙",
			"∙●∙",
			"∙∙●",
			"∙∙∙"
		]
	,
	:fistBump =>
		 [
			"🤜\u3000\u3000\u3000\u3000🤛 ",
			"🤜\u3000\u3000\u3000\u3000🤛 ",
			"🤜\u3000\u3000\u3000\u3000🤛 ",
			"\u3000🤜\u3000\u3000🤛\u3000 ",
			"\u3000\u3000🤜🤛\u3000\u3000 ",
			"\u3000🤜✨🤛\u3000\u3000 ",
			"🤜\u3000✨\u3000🤛\u3000 "
		]
	,
	:speaker =>
		 [
			"🔈 ",
			"🔉 ",
			"🔊 ",
			"🔉 "
		]
	,
	:orangePulse =>
		 [
			"🔸 ",
			"🔶 ",
			"🟠 ",
			"🟠 ",
			"🔶 "
		]
	,
	:bluePulse =>
		 [
			"🔹 ",
			"🔷 ",
			"🔵 ",
			"🔵 ",
			"🔷 "
		]
	,
	:aesthetic =>
		 [
			"▰▱▱▱▱▱▱",
			"▰▰▱▱▱▱▱",
			"▰▰▰▱▱▱▱",
			"▰▰▰▰▱▱▱",
			"▰▰▰▰▰▱▱",
			"▰▰▰▰▰▰▱",
			"▰▰▰▰▰▰▰",
			"▰▱▱▱▱▱▱"
		]

)::Dict{Symbol, Vector{String}}
